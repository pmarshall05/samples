// Sass map to define colors. Each set should have a "Dark" variation when required.
// e.g. `default` and `default-dark`. Or `purple` and `purple-dark`.

@use '../../00-base/00-defaults/01-variables' as *;
@use '../../00-base/00-defaults/02-breakpoints' as *;
@use '../../00-base/00-defaults/03-mixins' as *;
@use '../../00-base/01-colors/colors-used' as *;

$button-colors: (
  primary: (
    text: clr(text-inverse),
    bg: clr(primary),
    text-hover: clr(text-inverse),
    bg-hover: clr(extended-accent-2),
  ),
  primary-dark: (
    text: clr(text-inverse),
    bg: clr(primary),
    text-hover: clr(text-inverse),
    bg-hover: clr(extended-accent-2),
  ),
  secondary: (
    text: clr(text),
    bg: clr(secondary),
    text-hover: clr(text),
    bg-hover: clr(extended-accent-4),
  ),
  secondary-dark: (
    text: clr(text),
    bg: clr(secondary),
    text-hover: clr(text),
    bg-hover: clr(extended-accent-4),
  ),
  tertiary: (
    text: clr(text-inverse),
    bg: clr(accent),
    text-hover: clr(text),
    bg-hover: clr(extended-accent-5),
  ),
  tertiary-dark: (
    text: clr(text-inverse),
    bg: clr(accent),
    text-hover: clr(text),
    bg-hover: clr(extended-accent-5),
  ),
  outline: (
    text: clr(primary),
    bg: clr(neutral-white),
    text-hover: clr(accent),
    bg-hover: clr(neutral-white),
  ),
  outline-dark: (
    text: clr(primary),
    bg: clr(neutral-white),
    text-hover: clr(accent),
    bg-hover: clr(neutral-white),
  ),
  disabled: (
    text: clr(neutral-gray-3),
    bg: clr(neutral-gray-1),
    text-hover: clr(neutral-gray-3),
    bg-hover: clr(neutral-gray-1),
  ),
  disabled-dark: (
    text: clr(neutral-gray-3),
    bg: clr(neutral-gray-1),
    text-hover: clr(neutral-gray-3),
    bg-hover: clr(neutral-gray-1),
  ),
  disabled-outline: (
    text: clr(neutral-gray-2),
    bg: clr(neutral-white),
    text-hover: clr(neutral-gray-2),
    bg-hover: clr(neutral-white),
  ),
  disabled-outline-dark: (
    text: clr(neutral-gray-2),
    bg: clr(neutral-white),
    text-hover: clr(neutral-gray-2),
    bg-hover: clr(neutral-white),
  ),
);

// Mixin to define colors for one or more schemes.
// Simply pass the color scheme to the mixin to get the colors defined in the map.
// e.g. @include buttonColors(default) will get all of the colors defined in the "default" section.
@mixin buttonColors(
  $scheme,
  $pallate: map-get($button-colors, $scheme),
  $map: $button-colors
) {
  color: map-get($pallate, text);
  background-color: map-get($pallate, bg);

  &:visited {
    color: map-get($pallate, text);
  }

  &:hover {
    color: map-get($pallate, text-hover);
    background-color: map-get($pallate, bg-hover);
  }
}

// The button-base mixin contains styles that apply to all buttons
// regardless of color or size.
@mixin button-base {
  border: none;
  cursor: pointer;
  display: inline-flex;
  padding: 12px 24px;
  justify-content: center;
  align-items: center;
  gap: 10px;
  text-decoration: none;
  text-align: center;
  font-family: $font-body;
  border-radius: 4px;
}

// Button color variations
// Note how we include dark mode options for each
@mixin button-color-primary {
  @include buttonColors(primary);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(primary-dark);
  }
}

@mixin button-color-secondary {
  @include buttonColors(secondary);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(secondary-dark);
  }
}

@mixin button-color-tertiary {
  @include buttonColors(tertiary);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(tertiary-dark);
  }
}

@mixin button-color-outline {
  @include buttonColors(outline);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(outline-dark);
  }
}

@mixin button-color-disabled {
  @include buttonColors(disabled);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(disabled-dark);
  }
}

@mixin button-color-disabled-outline {
  @include buttonColors(disabled-outline);

  @media (prefers-color-scheme: dark) {
    @include buttonColors(disabled-outline-dark);
  }
}

// Button size variations
@mixin button-xsmall {
  font-size: 14px;
  font-style: normal;
  font-weight: 500;
  line-height: 150%; /* 21px */
}

@mixin button-small {
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: 150%; /* 24px */
}

@mixin button-medium {
  font-size: 18px;
  font-style: normal;
  font-weight: 500;
  line-height: 150%; /* 27px */
}

@mixin button-large {
  font-size: 20px;
  font-style: normal;
  font-weight: 500;
  line-height: 150%; /* 30px */
}

.button {
  @include button-base;
  @include button-color-primary;
  @include button-medium;

  &--xsmall {
    @include button-xsmall;
  }

  &--small {
    @include button-small;
  }

  &--medium {
    @include button-medium;
  }

  &--large {
    @include button-large;
  }

  &--secondary {
    @include button-color-secondary;
  }

  &--tertiary {
    @include button-color-tertiary;
  }

  &--outline {
    @include button-color-outline;
    border: 1px solid clr(primary);

    &:hover {
      border: 1px solid clr(accent);
      box-shadow: 0px 4px 4px 0px clr(extended-accent-1)
    }
  }

  &--disabled {
    @include button-color-disabled;
  }

  &--disabled-outline {
    @include button-color-disabled-outline;
    border: 1px solid clr(neutral-gray-2);

    &:hover {
      border: 1px solid clr(neutral-gray-2);
      box-shadow: 0px 4px 4px 0px clr(extended-accent-1)
    }
  }
}
