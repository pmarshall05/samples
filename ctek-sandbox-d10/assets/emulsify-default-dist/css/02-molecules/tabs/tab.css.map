{"version":3,"sources":["webpack:///./components/02-molecules/tabs/tab.scss","webpack:///./components/00-base/mixins/_breakpoints.scss"],"names":[],"mappings":"AAEA,yCAEE,cACA,kBACA,qCACA,gBACA,iBACA,yCACA,kBACA,qBACA,mDACA,mDACA,mBACA,qBC2EI,sCDxFN,yCAgBI,kBACA,QACA,qBACA,WACA,mBACA,iBACA,0DACA,kBAGF,qDACE,qCACA,mDAGF,6DACE,qCACA,gDACA,gDCsDE,sCDzDJ,6DAMI,qCACA,mDACA,mDACA,0DACA,kB","file":"css/02-molecules/tabs/tab.css","sourcesContent":["@use '../../00-base/init' as *;\n\n.m-tabs__link,\n.m-tabs__link--local-tasks {\n  display: block;\n  padding: 1em 2.4em;\n  color: var(--ctek-global-color-black);\n  font-weight: 600;\n  font-size: 1.1rem;\n  font-family: var(--ctek-global-font-sans);\n  text-align: center;\n  text-decoration: none;\n  background-color: var(--ctek-global-color-gray-100);\n  border: 1px solid var(--ctek-global-color-gray-500);\n  border-bottom: none;\n  transition: color 0.3s;\n\n  @include bp(lg) {\n    position: relative;\n    top: 1px;\n    display: inline-block;\n    width: auto;\n    padding: 0.6em 1.7em;\n    font-size: 0.75rem;\n    border-bottom: 1px solid var(--ctek-global-color-gray-500);\n    border-left: none;\n  }\n\n  &:hover {\n    color: var(--ctek-global-color-white);\n    background-color: var(--ctek-global-color-gray-500);\n  }\n\n  &.is-active {\n    color: var(--ctek-global-color-white);\n    background-color: var(--ctek-global-color-black);\n    border: 1px solid var(--ctek-global-color-black);\n\n    @include bp(lg) {\n      color: var(--ctek-global-color-black);\n      background-color: var(--ctek-global-color-gray-300);\n      border: 1px solid var(--ctek-global-color-gray-500);\n      border-bottom: 1px solid var(--ctek-global-color-gray-500);\n      border-left: none;\n    }\n  }\n}\n","/**\n * Global Breakpoints\n *\n * ref: https://rimdev.io/making-media-query-mixins-with-sass/\n *\n * This system has the following features\n * 1. Can create a map of breakpoint variables using any naming scheme\n * 2. Media direction can be specified; default direction is min-width\n * 3. Math is used on max-width directions to subtract 1px from the variable value to prevent breakpoint conflicts\n * 4. Adhoc values can be used and will be passed through directly, no math is done when using max-width.\n *\n * EXAMPLES\n *\n * To create a default min-width mq:\n * @include bp(md) {\n *   color: black;\n * }\n *\n * OUTPUTS:\n * @media (min-width: 992px) {\n *   .link {\n *     color: #000;\n *   }\n * }\n *\n * To create a max-width mq:\n * @include bp(sm, max) {\n *   color: yellow;\n * }\n *\n * OUTPUTS:\n * @media (max-width: 767px) {\n *   .link {\n *     color: #ff0;\n *   }\n * }\n *\n * To create a min-width and max-width mq:\n * @include bp(xs) {\n *   @include bp(md, max) {\n *     color: #bada55;\n *   }\n * }\n *\n * OUTPUTS:\n * @media (min-width: 375px) and (max-width: 991px) {\n *   .link {\n *     color: #bada55;\n *   }\n * }\n *\n * To create an ad-hoc min-width and max-width mq:\n * @include bp(300px) {\n *   @include bp(600px, max) {\n *     color: gray;\n *   }\n * }\n *\n * OUTPUTS:\n * @media (min-width: 300px) and (max-width: 600px) {\n *   .link {\n *     color: gray;\n *   }\n * }\n*/\n\n@use 'sass:map';\n\n$breakpoints: (\n  xs: 375px,\n  sm: 768px,\n  md: 992px,\n  lg: 1200px,\n  xl: 1400px,\n  xxl: 1600px,\n);\n\n@mixin bp($breakpoint, $direction: min) {\n\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Get the breakpoint value.\n    $breakpoint-value: map.get($breakpoints, $breakpoint);\n\n    @if $direction == max {\n\n      @media screen and (max-width: ($breakpoint-value - 1)) {\n        @content;\n      }\n    } @else if $direction == min {\n\n      @media screen and (min-width: $breakpoint-value) {\n        @content;\n      }\n    } @else {\n\n      @media screen and ($direction: $breakpoint-value) {\n        @content;\n      }\n    }\n\n    // If the breakpoint doesn't exist in the map.\n  } @else {\n\n    @if $direction == max {\n\n      @media screen and (max-width: $breakpoint) {\n        @content;\n      }\n    } @else if $direction == min {\n\n      @media screen and (min-width: $breakpoint) {\n        @content;\n      }\n    } @else {\n\n      @media screen and ($direction: $breakpoint) {\n        @content;\n      }\n    }\n  }\n}\n"],"sourceRoot":""}